plugins {
    id "edu.sc.seis.macAppBundle" version "2.1.0"
    id "com.github.johnrengelman.shadow" version "1.2.1"
    id "java"
    id "idea"
}

ext {
    appVersion = '0.13.2'
    codebase = '*'
    allowableCodebase = '*'
}

sourceCompatibility = 1.5

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.3.1'
    compile group: 'commons-cli', name: 'commons-cli', version: '1.2'
    compile group: 'commons-codec', name: 'commons-codec', version: '1.9'
    compile group: 'com.googlecode.plist', name: 'dd-plist', version: '1.8'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.4.1'

    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'commons-io', name: 'commons-io', version: '2.4'
}

jar.ext {
    javaVersion = System.properties["java.version"]
    javaVendor  = System.properties["java.vendor"]
}

jar {
    manifest {
        attributes  'Application-Name': 'Scalr SSH Launcher',
                    'Implementation-Title': 'SSH Launcher',
                    'Implementation-Version': appVersion,
                    'Main-Class': 'com.scalr.ssh.launcher.SSHLauncherCLI',
                    'Permissions': 'all-permissions',
                    'Codebase': codebase,
                    'Application-Library-Allowable-Codebase': allowableCodebase,
                    'Created-By': "$javaVersion ($javaVendor)",
                    'Manifest-Version': '1.0'//,
                    //'Trusted-Only': 'true'
                    //'Trusted-Library': 'true',
    }
}

shadowJar {
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
}

macAppBundle {
    mainClassName = "com.scalr.ssh.launcher.mac.SSHLauncherMacApp"
    appStyle = 'Oracle'
    bundleJRE = false
    bundleExtras = [
            CFBundleURLTypes: [
                    [
                            CFBundleURLName: "com.scalr.bar",
                            CFBundleURLSchemes: ["scalr+bar",]
                    ],
            ]
    ]
}

task overwriteStub(type: Copy) {
    from "./vendor/${project.macAppBundle.bundleExecutable}"
    into "${->project.buildDir}/${->project.macAppBundle.appOutputDir}/${->project.macAppBundle.appName}.app/Contents/MacOS"
}
copyStub.finalizedBy overwriteStub


task signedJar (type: Task, dependsOn: shadowJar) << {
    ant.signjar(
        jar: shadowJar.getArchivePath(),
        keystore: signingKeyStore,
        storepass: signingKeyPass,
        alias: signingKeyAlias,
        strict: true,
        verbose: true,
        tsaurl: 'http://timestamp.digicert.com'
    )
}


task createTestFile(type: Copy, dependsOn: shadowJar) {
    from 'src/templates'
    into "."
    destinationDir projectDir
    include "applet.html.template"
    rename { file -> "applet.html" }
    expand(jarPath: projectDir.toPath().relativize(shadowJar.getArchivePath().toPath()), version: appVersion)
}

task fullBuild(type: Task, dependsOn: [signedJar, createTestFile])


// Helpers
task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}